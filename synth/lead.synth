# Let the lead frequency 'glide', depending on whether the lead note is being pressed
node_create adder y [n = 2]
node_create conditional z
node_set y.input_1                z
node_set y.input_2                lead_key_pressing
node_set z.input                  y
node_set z.low                    1.0
node_set z.high                   1.33
node_set z.output_low             0.25
node_set z.output_middle          0.50
node_set z.output_high            0.75
node_create conditional alpha
node_set alpha.input              z
node_set alpha.low                0.67
node_set alpha.high               0.67
node_set alpha.output_low         1.0
node_create adder oneminusalpha [n = 2]
node_set oneminusalpha.input_1    1.0
node_set oneminusalpha.input_2    alpha
node_set oneminusalpha.gain_2     -1.0
node_create adder main_freq [n = 2]
node_set main_freq.input_1        main_freq
node_set main_freq.gain_1         oneminusalpha
node_set main_freq.input_2        lead_key_frequency
node_set main_freq.gain_2         alpha

# Vibrato
node_create adder vibrato_amp
node_set vibrato_amp.input_1      modulation_wheel
node_set vibrato_amp.gain_1       0.059463
node_create adder vibrato_freq [n = 2]
node_set vibrato_freq.input_1     modulation_wheel
node_set vibrato_freq.gain_1      3.0
node_set vibrato_freq.input_2     3
node_create oscillator vibrato
node_set vibrato.sample           sine
node_set vibrato.mean             1.0
node_set vibrato.amplitude        vibrato_amp
node_set vibrato.frequency        vibrato_freq
node_create adder freq [n = 1]
node_set freq.input_1             main_freq
node_set freq.gain_1              vibrato

# Gliding constant
node_set knob_9.min               0.01
node_set knob_9.max               0.10
node_set alpha.output_high        knob_9

# Oscillator and amplitude envelope
node_create ADSR e_amp
node_set e_amp.attack_time        0.01
node_set e_amp.decay_time         0.05
node_set e_amp.sustain_level      0.5
node_set e_amp.release_time       0.1
node_set e_amp.attack_curve        quartout
node_set e_amp.decay_curve         quartout
node_set e_amp.release_curve       quartout

node_create adder amp
node_set amp.input_1              lead_key_velocity
node_set amp.gain_1               e_amp

node_create oscillator lead
node_set lead.sample              sine
node_set lead.frequency           freq
node_set lead.amplitude           amp

# Additional harmonic(s)
node_create adder freq2
node_set freq2.input_1            freq
node_set freq2.gain_1             3.0

node_create oscillator lead2
node_set lead2.sample             sine
node_set lead2.frequency          freq2
node_set lead2.amplitude          amp

node_create adder leads [n = 2]
node_set leads.input_1            lead
node_set leads.input_2            lead2

# Fuzz effect
node_set knob_1.min               0.1 # fuzz gain
node_set knob_1.max               100
node_set knob_1.curve             exponential

node_create fuzz fuzzed
node_set fuzzed.input             leads
node_set fuzzed.input_gain        knob_1

# Delay effect
node_set knob_2.min               0.0 # delay gain
node_set knob_2.max               1.0

node_set knob_10.min              0.234375 # delay time
node_set knob_10.max              0.468750

node_create delay delayed [n = 1, T = 1.0]
node_set delayed.input            fuzzed
node_set delayed.time_1           knob_10
node_set delayed.gain_1           knob_2
node_set delayed.feedback         1.0

# Bandpass filter
node_set knob_3.min               100 # center frequency
node_set knob_3.max               11000
node_set knob_3.curve             exponential

node_set knob_4.min               1.0 # bandwidth
node_set knob_4.max               8.0
node_set knob_4.curve             exponential

node_create bandpass BP [order = 3]
node_set BP.input                 delayed
node_set BP.center                knob_3
node_set BP.bandwidth             knob_4

node_create audio_output lead_output
node_set lead_output.channel_1    BP
